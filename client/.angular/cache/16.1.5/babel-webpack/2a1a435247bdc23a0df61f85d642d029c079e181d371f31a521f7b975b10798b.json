{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/error.service\";\nimport * as i2 from \"@angular/common\";\nfunction GlobalErrorComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function GlobalErrorComponent_div_0_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.errorService.clear());\n    });\n    i0.ɵɵtext(3, \"\\u00D7\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const error_r1 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", error_r1, \" \");\n  }\n}\nexport class GlobalErrorComponent {\n  constructor(errorService) {\n    this.errorService = errorService;\n  }\n  ngOnInit() {}\n}\nGlobalErrorComponent.ɵfac = function GlobalErrorComponent_Factory(t) {\n  return new (t || GlobalErrorComponent)(i0.ɵɵdirectiveInject(i1.ErrorService));\n};\nGlobalErrorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GlobalErrorComponent,\n  selectors: [[\"app-global-error\"]],\n  decls: 2,\n  vars: 3,\n  consts: [[\"style\", \"color: red;\", 4, \"ngIf\"], [2, \"color\", \"red\"], [3, \"click\"]],\n  template: function GlobalErrorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, GlobalErrorComponent_div_0_Template, 4, 1, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.errorService.error$));\n    }\n  },\n  dependencies: [i2.NgIf, i2.AsyncPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵlistener","GlobalErrorComponent_div_0_Template_button_click_2_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","errorService","clear","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","error_r1","GlobalErrorComponent","constructor","ngOnInit","ɵɵdirectiveInject","i1","ErrorService","selectors","decls","vars","consts","template","GlobalErrorComponent_Template","rf","ctx","ɵɵtemplate","GlobalErrorComponent_div_0_Template","ɵɵproperty","ɵɵpipeBind1","error$"],"sources":["C:\\Users\\andre\\OneDrive\\Рабочий стол\\bkk\\task-bkk\\client\\src\\app\\components\\global-error\\global-error.component.ts","C:\\Users\\andre\\OneDrive\\Рабочий стол\\bkk\\task-bkk\\client\\src\\app\\components\\global-error\\global-error.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ErrorService } from '../../services/error.service';\n\n@Component({\n  selector: 'app-global-error',\n  templateUrl: './global-error.component.html',\n  styleUrls: ['./global-error.component.scss']\n})\nexport class GlobalErrorComponent implements OnInit {\n\n  constructor(public errorService: ErrorService) {}\n\n  ngOnInit(): void {\n  }\n}\n","<div\n    *ngIf=\"errorService.error$ | async as error\"\n    style=\"color: red;\">\n    {{ error }}\n    <button (click)=\"errorService.clear()\">&times;</button>\n</div>\n"],"mappings":";;;;;;ICAAA,EAAA,CAAAC,cAAA,aAEwB;IACpBD,EAAA,CAAAE,MAAA,GACA;IAAAF,EAAA,CAAAC,cAAA,gBAAuC;IAA/BD,EAAA,CAAAG,UAAA,mBAAAC,4DAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAP,EAAA,CAAAQ,aAAA;MAAA,OAASR,EAAA,CAAAS,WAAA,CAAAF,MAAA,CAAAG,YAAA,CAAAC,KAAA,EAAoB;IAAA,EAAC;IAACX,EAAA,CAAAE,MAAA,aAAO;IAAAF,EAAA,CAAAY,YAAA,EAAS;;;;IADvDZ,EAAA,CAAAa,SAAA,GACA;IADAb,EAAA,CAAAc,kBAAA,MAAAC,QAAA,MACA;;;ADIJ,OAAM,MAAOC,oBAAoB;EAE/BC,YAAmBP,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;EAAiB;EAEhDQ,QAAQA,CAAA,GACR;;AALWF,oBAAoB,C;mBAApBA,oBAAoB,EAAAhB,EAAA,CAAAmB,iBAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;AAApBL,oBAAoB,C;QAApBA,oBAAoB;EAAAM,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRjC5B,EAAA,CAAA8B,UAAA,IAAAC,mCAAA,iBAKM;;;;MAJD/B,EAAA,CAAAgC,UAAA,SAAAhC,EAAA,CAAAiC,WAAA,OAAAJ,GAAA,CAAAnB,YAAA,CAAAwB,MAAA,EAAkC"},"metadata":{},"sourceType":"module","externalDependencies":[]}