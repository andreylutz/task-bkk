{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/request.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction FormComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.myValidator.message);\n  }\n}\nfunction FormComponent_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r2.title);\n  }\n}\nexport class FormComponent {\n  constructor(svc, router) {\n    this.svc = svc;\n    this.router = router;\n    this.form = new FormGroup({\n      fieldOne: new FormControl('18', [Validators.required, myValidator])\n      // combobox,\n      // check,\n    });\n  }\n\n  get fieldOne() {\n    return this.form.controls.fieldOne;\n  }\n  ngOnInit() {\n    this.svc.getComboxFields().subscribe(data => {\n      this.comboboxData = data;\n    });\n    //  this.numberControl = new FormControl('18', [ Validators.required, myValidator ]);\n    //  this.numberControl.valueChanges\n    //  .pipe(\n    //     debounceTime(1000)\n    //  )\n    //  .subscribe((value) => console.log(value))\n    //  this.numberControl.statusChanges.subscribe((status) => {\n    //     console.log(this.numberControl.errors);\n    //     console.log(status);\n    //  })\n  }\n\n  handleSubmit() {\n    this.router.navigate(['/main']);\n  }\n}\n// Функция валидации\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.RequestService), i0.ɵɵdirectiveInject(i2.Router));\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  decls: 14,\n  vars: 3,\n  consts: [[1, \"form-fields\", 3, \"formGroup\"], [\"id\", \"name\", 1, \"form-field__one\"], [\"formControlName\", \"fieldOne\", \"placeholder\", \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"], [4, \"ngIf\"], [1, \"form-field__two\"], [1, \"form-field__combobox\"], [4, \"ngFor\", \"ngForOf\"], [1, \"form-field__three\"], [\"type\", \"checkbox\", \"id\", \"check\", \"value\", \"agree\", 1, \"form-field__checkbox\"], [\"for\", \"check\"], [1, \"from-field__four\"], [1, \"form-field__button\", 3, \"click\"]],\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"input\", 2);\n      i0.ɵɵtemplate(3, FormComponent_p_3_Template, 2, 1, \"p\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"select\", 5);\n      i0.ɵɵtemplate(6, FormComponent_option_6_Template, 2, 1, \"option\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 7);\n      i0.ɵɵelement(8, \"input\", 8);\n      i0.ɵɵelementStart(9, \"label\", 9);\n      i0.ɵɵtext(10, \"\\u0421\\u043E\\u0433\\u043B\\u0430\\u0441\\u0435\\u043D \\u043D\\u0430 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0443 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 10)(12, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function FormComponent_Template_button_click_12_listener() {\n        return ctx.handleSubmit();\n      });\n      i0.ɵɵtext(13, \"\\u0414\\u0430\\u043B\\u0435\\u0435\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.fieldOne.errors[\"myValidator\"]);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.comboboxData);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\".form-fields[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-around;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9mb3JtL2Zvcm0uY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi8uLi8uLi8lRDAlQTAlRDAlQjAlRDAlQjElRDAlQkUlRDElODclRDAlQjglRDAlQjklMjAlRDElODElRDElODIlRDAlQkUlRDAlQkIvYmtrL3Rhc2stYmtrL2NsaWVudC9zcmMvYXBwL2NvbXBvbmVudHMvZm9ybS9mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLDZCQUFBO0FDQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1maWVsZHMge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59IiwiLmZvcm0tZmllbGRzIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nfunction myValidator(formControl) {\n  if (formControl.value.length < 18 || formControl.value.length > 120) {\n    return {\n      myValidator: {\n        message: 'Неправельный диапозон'\n      }\n    };\n  }\n  return null;\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","myValidator","message","item_r2","title","FormComponent","constructor","svc","router","form","fieldOne","required","controls","ngOnInit","getComboxFields","subscribe","data","comboboxData","handleSubmit","navigate","ɵɵdirectiveInject","i1","RequestService","i2","Router","selectors","decls","vars","consts","template","FormComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","FormComponent_p_3_Template","FormComponent_option_6_Template","ɵɵlistener","FormComponent_Template_button_click_12_listener","ɵɵproperty","errors","formControl","value","length"],"sources":["C:\\Users\\andre\\OneDrive\\Рабочий стол\\bkk\\task-bkk\\client\\src\\app\\components\\form\\form.component.ts","C:\\Users\\andre\\OneDrive\\Рабочий стол\\bkk\\task-bkk\\client\\src\\app\\components\\form\\form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { RequestService } from 'src/app/services/request.service';\r\n\r\n@Component({\r\n    selector: 'app-form',\r\n    templateUrl: './form.component.html',\r\n    styleUrls: ['./form.component.scss'],\r\n})\r\n\r\nexport class FormComponent implements OnInit {\r\n    constructor(private svc: RequestService, public router: Router) {}\r\n\r\n    form = new FormGroup({\r\n        fieldOne: new FormControl<string>('18', [ Validators.required, myValidator ]),\r\n        // combobox,\r\n        // check,\r\n    })\r\n    \r\n    get fieldOne() {\r\n        return this.form.controls.fieldOne as FormControl   \r\n    } \r\n    // numberControl: FormControl;\r\n    comboboxData: any;\r\n\r\n\r\n    ngOnInit() {\r\n         this.svc.getComboxFields().subscribe(data => {\r\n            this.comboboxData = data\r\n         })\r\n        //  this.numberControl = new FormControl('18', [ Validators.required, myValidator ]);\r\n        //  this.numberControl.valueChanges\r\n        //  .pipe(\r\n        //     debounceTime(1000)\r\n        //  )\r\n        //  .subscribe((value) => console.log(value))\r\n\r\n        //  this.numberControl.statusChanges.subscribe((status) => {\r\n        //     console.log(this.numberControl.errors);\r\n        //     console.log(status);\r\n        //  })\r\n    }\r\n\r\n    handleSubmit() {\r\n        this.router.navigate(['/main']);\r\n    }\r\n}\r\n \r\n// Функция валидации\r\nfunction myValidator(formControl: FormControl) {\r\n\r\n    if (formControl.value.length < 18 || formControl.value.length > 120) {\r\n        return { myValidator: { message: 'Неправельный диапозон' } }\r\n    }\r\n\r\n    return null\r\n}","<form class=\"form-fields\" [formGroup]=\"form\">\r\n    <div class=\"form-field__one\" id=\"name\">\r\n        <input formControlName=\"fieldOne\" placeholder=\"Введите значение\">\r\n        <p *ngIf=\"fieldOne.errors['myValidator']\">{{ myValidator.message }}</p>\r\n    </div>\r\n    <div class=\"form-field__two\">\r\n        <select class=\"form-field__combobox\">\r\n            <option *ngFor=\"let item of comboboxData\">{{ item.title }}</option>\r\n        </select>\r\n    </div>\r\n    <div class=\"form-field__three\">\r\n        <input class=\"form-field__checkbox\" type=\"checkbox\" id=\"check\" value=\"agree\">\r\n        <label for=\"check\">Согласен на обработку данных</label>\r\n    </div>\r\n    <div class=\"from-field__four\">\r\n        <button class=\"form-field__button\" (click)=\"handleSubmit()\">Далее</button>\r\n    </div>\r\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}