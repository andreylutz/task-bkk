{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./error.service\";\nexport class RequestService {\n  constructor(http, errorService) {\n    this.http = http;\n    this.errorService = errorService;\n  }\n  getComboxFields() {\n    return this.http.get('http://jsonplaceholder.typicode.com/posts').retry(2).pipe(catchError(this.errorHandler.bind(this)));\n  }\n  errorHandler(error) {\n    this.errorService.handle(error.message);\n    return throwError(() => error.message);\n  }\n}\nRequestService.ɵfac = function RequestService_Factory(t) {\n  return new (t || RequestService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService));\n};\nRequestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RequestService,\n  factory: RequestService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","throwError","RequestService","constructor","http","errorService","getComboxFields","get","retry","pipe","errorHandler","bind","error","handle","message","i0","ɵɵinject","i1","HttpClient","i2","ErrorService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\andre\\OneDrive\\Рабочий стол\\bkk\\task-bkk\\client\\src\\app\\services\\request.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, throwError,retry } from 'rxjs';\nimport { ErrorService } from './error.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestService {\n\n  constructor(\n    private http: HttpClient,\n    private errorService: ErrorService\n    ) {}\n\n  getComboxFields() {\n   return this.http\n   .get('http://jsonplaceholder.typicode.com/posts')\n   .retry(2)\n   .pipe(\n    catchError(this.errorHandler.bind(this))\n   )\n  }\n\n  private errorHandler(error: HttpErrorResponse) {\n    this.errorService.handle(error.message)\n    return throwError(() => error.message)\n  }\n}\n"],"mappings":"AAEA,SAASA,UAAU,EAAEC,UAAU,QAAc,MAAM;;;;AAMnD,OAAM,MAAOC,cAAc;EAEzBC,YACUC,IAAgB,EAChBC,YAA0B;IAD1B,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,YAAY,GAAZA,YAAY;EACjB;EAELC,eAAeA,CAAA;IACd,OAAO,IAAI,CAACF,IAAI,CACfG,GAAG,CAAC,2CAA2C,CAAC,CAChDC,KAAK,CAAC,CAAC,CAAC,CACRC,IAAI,CACJT,UAAU,CAAC,IAAI,CAACU,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CACxC;EACF;EAEQD,YAAYA,CAACE,KAAwB;IAC3C,IAAI,CAACP,YAAY,CAACQ,MAAM,CAACD,KAAK,CAACE,OAAO,CAAC;IACvC,OAAOb,UAAU,CAAC,MAAMW,KAAK,CAACE,OAAO,CAAC;EACxC;;AAnBWZ,cAAc,C;mBAAdA,cAAc,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,YAAA;AAAA;AAAdlB,cAAc,C;SAAdA,cAAc;EAAAmB,OAAA,EAAdnB,cAAc,CAAAoB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}