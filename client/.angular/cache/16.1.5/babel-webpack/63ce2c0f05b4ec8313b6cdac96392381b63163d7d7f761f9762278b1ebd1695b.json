{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/request.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction FormComponent_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r1.title);\n  }\n}\nexport class FormComponent {\n  constructor(svc) {\n    this.svc = svc;\n  }\n  ngOnInit() {\n    this.svc.getComboxFields().subscribe(data => {\n      this.comboboxData = data;\n    });\n    this.numberControl = new FormControl('18', [Validators.required, myValidator]);\n    this.numberControl.valueChanges.pipe(debounceTime(1000)).subscribe(value => console.log(value));\n    this.numberControl.statusChanges.subscribe(status => {\n      console.log(this.numberControl.errors);\n      console.log(status);\n    });\n  }\n  handleSubmit() {}\n}\n// Функция валидации\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.RequestService));\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  decls: 9,\n  vars: 2,\n  consts: [[\"action\", \"\"], [3, \"formControl\"], [\"name\", \"\", \"id\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", \"id\", \"coding\", \"value\", \"coding\"], [\"for\", \"coding\"], [\"type\", \"submit\"]],\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵelement(1, \"input\", 1);\n      i0.ɵɵelementStart(2, \"select\", 2);\n      i0.ɵɵtemplate(3, FormComponent_option_3_Template, 2, 1, \"option\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 4);\n      i0.ɵɵelementStart(5, \"label\", 5);\n      i0.ɵɵtext(6, \"\\u0421\\u043E\\u0433\\u043B\\u0430\\u0441\\u0435\\u043D \\u043D\\u0430 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0443 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 6);\n      i0.ɵɵtext(8, \"\\u0414\\u0430\\u043B\\u0435\\u0435\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.numberControl);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.comboboxData);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgForm, i3.FormControlDirective],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nfunction myValidator(formControl) {\n  if (formControl.value.length < 18 || formControl.value.length > 120) {\n    return {\n      myValidator: {\n        message: 'Неправельный диапозон'\n      }\n    };\n  }\n  return null;\n}","map":{"version":3,"names":["FormControl","Validators","debounceTime","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","item_r1","title","FormComponent","constructor","svc","ngOnInit","getComboxFields","subscribe","data","comboboxData","numberControl","required","myValidator","valueChanges","pipe","value","console","log","statusChanges","status","errors","handleSubmit","ɵɵdirectiveInject","i1","RequestService","selectors","decls","vars","consts","template","FormComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","FormComponent_option_3_Template","ɵɵproperty","formControl","length","message"],"sources":["C:\\Users\\andre\\OneDrive\\Рабочий стол\\bkk\\task-bkk\\client\\src\\app\\components\\form\\form.component.ts","C:\\Users\\andre\\OneDrive\\Рабочий стол\\bkk\\task-bkk\\client\\src\\app\\components\\form\\form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { RequestService } from 'src/app/services/request.service';\r\n\r\n@Component({\r\n    selector: 'app-form',\r\n    templateUrl: './form.component.html',\r\n    styleUrls: ['./form.component.scss'],\r\n})\r\n\r\nexport class FormComponent implements OnInit {\r\n    constructor(private svc: RequestService) {}\r\n    \r\n    numberControl: FormControl;\r\n    comboboxData: any;\r\n\r\n\r\n    ngOnInit() {\r\n         this.svc.getComboxFields().subscribe(data => {\r\n            this.comboboxData = data\r\n         })\r\n         this.numberControl = new FormControl('18', [ Validators.required, myValidator ]);\r\n         this.numberControl.valueChanges\r\n         .pipe(\r\n            debounceTime(1000)\r\n         )\r\n         .subscribe((value) => console.log(value))\r\n         this.numberControl.statusChanges.subscribe((status) => {\r\n            console.log(this.numberControl.errors);\r\n            console.log(status);\r\n         })\r\n    }\r\n\r\n    handleSubmit() {\r\n\r\n    }\r\n}\r\n \r\n// Функция валидации\r\nfunction myValidator(formControl: FormControl) {\r\n\r\n    if (formControl.value.length < 18 || formControl.value.length > 120) {\r\n        return { myValidator: { message: 'Неправельный диапозон' } }\r\n    }\r\n\r\n    return null\r\n}","<form action=\"\">\r\n    <input [formControl]=\"numberControl\">\r\n    <select name=\"\" id=\"\">\r\n        <option *ngFor=\"let item of comboboxData\">{{ item.title }}</option>\r\n    </select>\r\n    <input type=\"checkbox\" id=\"coding\" value=\"coding\">\r\n    <label for=\"coding\">Согласен на обработку данных</label>\r\n    <button type=\"submit\">Далее</button>\r\n</form>"],"mappings":"AACA,SAASA,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AACxD,SAASC,YAAY,QAAQ,gBAAgB;;;;;;;ICCrCC,EAAA,CAAAC,cAAA,aAA0C;IAAAD,EAAA,CAAAE,MAAA,GAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAAzBH,EAAA,CAAAI,SAAA,GAAgB;IAAhBJ,EAAA,CAAAK,iBAAA,CAAAC,OAAA,CAAAC,KAAA,CAAgB;;;ADUlE,OAAM,MAAOC,aAAa;EACtBC,YAAoBC,GAAmB;IAAnB,KAAAA,GAAG,GAAHA,GAAG;EAAmB;EAM1CC,QAAQA,CAAA;IACH,IAAI,CAACD,GAAG,CAACE,eAAe,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACzC,IAAI,CAACC,YAAY,GAAGD,IAAI;IAC3B,CAAC,CAAC;IACF,IAAI,CAACE,aAAa,GAAG,IAAInB,WAAW,CAAC,IAAI,EAAE,CAAEC,UAAU,CAACmB,QAAQ,EAAEC,WAAW,CAAE,CAAC;IAChF,IAAI,CAACF,aAAa,CAACG,YAAY,CAC9BC,IAAI,CACFrB,YAAY,CAAC,IAAI,CAAC,CACpB,CACAc,SAAS,CAAEQ,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IACzC,IAAI,CAACL,aAAa,CAACQ,aAAa,CAACX,SAAS,CAAEY,MAAM,IAAI;MACnDH,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,aAAa,CAACU,MAAM,CAAC;MACtCJ,OAAO,CAACC,GAAG,CAACE,MAAM,CAAC;IACtB,CAAC,CAAC;EACP;EAEAE,YAAYA,CAAA,GAEZ;;AAGJ;AA5BanB,aAAa,C;mBAAbA,aAAa,EAAAR,EAAA,CAAA4B,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAbtB,aAAa,C;QAAbA,aAAa;EAAAuB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCb1BrC,EAAA,CAAAC,cAAA,cAAgB;MACZD,EAAA,CAAAuC,SAAA,eAAqC;MACrCvC,EAAA,CAAAC,cAAA,gBAAsB;MAClBD,EAAA,CAAAwC,UAAA,IAAAC,+BAAA,oBAAmE;MACvEzC,EAAA,CAAAG,YAAA,EAAS;MACTH,EAAA,CAAAuC,SAAA,eAAkD;MAClDvC,EAAA,CAAAC,cAAA,eAAoB;MAAAD,EAAA,CAAAE,MAAA,gKAA4B;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACxDH,EAAA,CAAAC,cAAA,gBAAsB;MAAAD,EAAA,CAAAE,MAAA,qCAAK;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MAN7BH,EAAA,CAAAI,SAAA,GAA6B;MAA7BJ,EAAA,CAAA0C,UAAA,gBAAAJ,GAAA,CAAAtB,aAAA,CAA6B;MAEPhB,EAAA,CAAAI,SAAA,GAAe;MAAfJ,EAAA,CAAA0C,UAAA,YAAAJ,GAAA,CAAAvB,YAAA,CAAe;;;;;;ADuChD,SAASG,WAAWA,CAACyB,WAAwB;EAEzC,IAAIA,WAAW,CAACtB,KAAK,CAACuB,MAAM,GAAG,EAAE,IAAID,WAAW,CAACtB,KAAK,CAACuB,MAAM,GAAG,GAAG,EAAE;IACjE,OAAO;MAAE1B,WAAW,EAAE;QAAE2B,OAAO,EAAE;MAAuB;IAAE,CAAE;;EAGhE,OAAO,IAAI;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}